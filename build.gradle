buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.6.RELEASE'
}

apply plugin: 'war'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: org.sonarqube.gradle.SonarQubePlugin

springBoot {
  executable = true
  classifier = 'boot'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

war {
    baseName = "$project.name"
    version = '1.0.0'
}

// apply from: "$rootDir/gradle/integration-test.gradle"
// apply from: "$rootDir/gradle/code-analysis.gradle"
// apply from: "$rootDir/gradle/deploy.gradle"

repositories {
  maven {
    credentials {
      username "$nexusUser"
      password "$nexusPass"
    }
    url "$nexusURL"
  }
}

project.tasks.findAll { it.name.startsWith("publish") } .each { it.dependsOn assemble }

publishing {
  publications {
    mavenJava(MavenPublication){
      version = '1.0.0'
      artifactId = 'todo-spring-boot'
      groupId = 'com.swf'
      // "boot" jar
      artifact ("$buildDir/libs/$project.name-$version-boot.war") {
      }
    }
  }
}

publishing {
  repositories {
    maven {
      url "https://nexus.oteemo-swf.com/repository/cbp-releases/"
      credentials {
        username "$nexusUser"
        password "$nexusPass"
      }
    }
  }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('javax.servlet:jstl')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

sonarqube {
    properties {
        property 'sonar.projectName', 'todo-spring-boot'
        property 'sonar.host.url', 'http://sonar-sonarqube.management:9000/'
        property 'sonar.login', System.getenv('SONAR_LOGIN')
        // properties['sonar.tests'] += sourceSets.integrationTest.java.srcDirs
    }
}
